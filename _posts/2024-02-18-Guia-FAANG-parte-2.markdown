---
title: FAANG - Guia Descomplicado de Entrevistas - parte 2
published: true
description: Como estudar pra entrevista? Quais s√£o as estrat√©gias de estudos? Por onde estudar?
tags: #faang #carreira #entrevistas #algoritmos
cover_image: https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aguq7p5irkztxp4p5xw3.png 
# Use a ratio of 100:42 for best results.
# published_at: 2024-02-17 18:20 +0000
---

Achou que hoje n√£o ia ter post novo? Achou errado! 

![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjmych5qftepq8808a3w.gif)

Hoje vai ter post novo sim e talvez seja a pergunta que eu mais recebo por DMs no finado Twitter. 

[Voc√™ leu o post anterior](https://dev.to/hugaomarques/faang-guia-descomplicado-de-entrevistas-parte-1-3di0), aplicou com seu resume topado e agora o recrutador entrou em contato pra marcar uma entrevista. O que fazer? Nesse post vamos discutir algumas estrat√©gias e materiais de estudo, vamos l√° jovem gafanhoto(a) que a estrada √© longa.

√â importante mencionar que esse n√£o √© o √∫nico caminho, mas √© o que funcionou comigo 

## Tabela de conte√∫do

1. [Conversa com a pessoa recrutadora.](#conversa-com-a-pessoa-recrutadora)
2. [Tempo de preparo](#tempo-de-preparo)
3. [Materiais de estudo para algoritmos](#materiais-de-estudo-para-algoritmos)
4. [Materiais de estudo para system design](#materiais-de-estudo-para-system-design)
5. [Estrat√©gias de estudo.](#estrat√©gias-de-estudo)

## Conversa com a pessoa recrutadora

Se o seu resume chamou aten√ß√£o, a pessoa recrutadora vai te ligar para conversar e fazer um pente fino se voc√™ encaixa na vaga.

![Carta de magic recrutadora imperial.](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vqor5flshujsikxvfp0m.jpg)

Dica importante (que nem deveria ser uma dica‚Ä¶): **seja uma pessoa bacana com a pessoa recrutadora**. Essa pessoa ser√° sua aliada no processo de recrutamento. Eu j√° vi muito dev sendo arrogando com o pessoal de recrutamento e pow, tomou na cabe√ßa!

Conversa vai e conversa vem, em dado momento a pessoa vai te perguntar sua disponibilidade para uma primeira fase de entrevista. **N√£o se sinta pressionada(o) a dizer amanh√£**, n√£o √© assim que sele√ß√£o de FAANG funciona. Pense em quanto tempo voc√™ precisa e marque respeitando essas datas. O pipeline de recrutamento √© feita para acomodar isso.

## Tempo de preparo

![Imagem relacionada ao tempo](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwdxknl53lx964a78q2f.jpg)

Show! Mas e por quanto tempo voc√™ deve se preparar? A resposta √≥bvia √© que o tempo NUNCA vai ser o suficiente. A entrevista √© uma quest√£o de m√∫ltiplas vari√°veis onde voc√™ estuda para tentar diminuir a chance de te perguntarem algo que voc√™ n√£o sabe, por√©m, SEMPRE vai ter algo que voc√™ n√£o manda muito bem. Tendo dito isso, pense em quanto tempo voc√™ precisa pra exercitar o b√°sico.

Eu gosto de pensar que existem 4 trilhas distintas dependendo do seu grau de preparo anterior. Quanto mais intimidade voc√™ tem com os materiais e preparo, menos tempo voc√™ precisa. 

Para efeito de compara√ß√£o, NORMALMENTE hoje em dia eu sigo a trilha level 5. Por que level 5? Para quem joga D&D sabe que √© no level 5 que voc√™ tem acesso √† bola de fogo e a brincadeira come√ßa de verdade üòÜ.

### Trilha aventureira level 10+

![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fu5ssktb4dic7dxv3sts.jpg)

Normalmente, a pessoa j√° √© uma veterana nesses tipos de entrevistas e j√° domina os tipos de quest√µes diferentes que podem aparecer. Eu diria que nessa trilha aqui, a pessoa precisa de umas 2-4 semanas de preparo pra "refrescar" a mem√≥ria.

Aqui eu diria pra focar nos t√≥picos que voc√™ lembra menos ou que exigem diversos conceitos, backtracking, grafos, greedy e programa√ß√£o din√¢mica s√£o bons candidatos.

### Trilha aventureira level 5

Se voc√™ se enquadra aqui, bem-vinda(o) ao meu time. Normalmente, nessa categoria a pessoa precisa de 4 a 8 semanas de preparo, estudando no m√≠nimo umas 2 horas por dia. A pessoa em quest√£o j√° sabe a maioria das estruturas de dados mais comuns, conhece an√°lise assint√≥tica e j√° tem familiaridade com diversas quest√µes e estrat√©gias. 

O objetivo aqui s√£o 2:
1. Praticar os algoritmos com diversas quest√µes pra aprender mais estrat√©gias ou exercitar as estrat√©gias que j√° se conhece.
2. Aprender algoritmos novos que por algum motivo voc√™ n√£o tem tanta familiaridade. 

### Trilha aventureira level 1 

Nessa categoria temos a pessoa que j√° cursou CC ou tem familiaridade com algoritmos, mas faz muito tempo que estudou qualquer coisa, fez quest√µes, etc.

Eu recomendo de 8 - 12 semanas de treino intensivo. Voc√™ precisar√° praticar os diversos t√≥picos, aprender as estrat√©gias, relembrar as an√°lises de cada estrutura de dados e caminhar das quest√µes f√°ceis at√© as quest√µes m√©dias/dif√≠ceis no *leetcode*.

Eu me enquandrava justamente aqui l√° em 2013 quando fiz minha primeira sele√ß√£o e de novo em 2020 quando comecei a praticar no leetcode pela primeira vez. √â comum quando a gente fica enferrujado acabar voltando pra essa categoria, a boa not√≠cia √© que com o tempo, voc√™ vai ficar cada vez mais "est√°vel" no level 5. 

### Trilha level 0 em algoritmos e ci√™ncia da computa√ß√£o

Se voc√™ se assustou com o level 1 e pensou "vixe, eu num caio nem aqui" n√£o se desespere, essa categoria √© para voc√™, nobre aspirante √† pessoa aventureira.

Por ter conhecimento 0 em algoritmos voc√™ vai precisar come√ßar do b√°sico fazendo um curso no assunto, estudando os algoritmos cl√°ssicos e brincando com as quest√µes easy pra ir se acostumando. O ideal √© que voc√™ comece implementando cada algoritmo/estrutura de dados pra saber como a coisa funciona. 

## Materiais de estudo para algoritmos

Agora que voc√™ tem uma ideia de quanto tempo vai levar, por onde voc√™ estuda? Eu deixo aqui os materiais que eu usei, vi por a√≠ e/ou vejo outras pessoas recomendarem.

### Livros

![Grokking algorithms](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t8z6kqr63zvksj45zf2d.jpg)

O Grokking algorithms √© um livro bom pra quem t√° no n√≠vel 0 acima. Ele √© bem b√°sico, mas te ajuda a molhar o p√© no mundo dos algoritmos. Eu tenho ele e acho divertido como ele vai apresentando os conceitos.

![Livro cracking the coding interview](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcrsy0zv35n25q3dbue0.jpg)

Esse aqui √© a "b√≠blia" pra entrevistas. Normalmente pro pessoal que est√° ali no level 1. Esse foi o primeiro livro a abordar o assunto quando era tudo mato. As explica√ß√µes s√£o boas e as quest√µes que tem nele s√£o cl√°ssicas.

![Elements of programming interviews](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71jbc1tf3v0csn6jqqb5.jpg)

Esse aqui tem pra v√°rias linguagens, eu acho que tem vers√£o em Python, Java e C++. Ele √© mais direto ao ponto do que o cracking the coding e tem menos explica√ß√µes. Eu cheguei a us√°-lo brevemente, mas depois de um tempo eu prefiro s√≥ praticar no leetcode ou usar materiais que apontam quest√µes no pr√≥prio leetcode. Eu deixo ele aqui mais por curiosidade se a pessoa realmente gosta do t√≥pico de livros. 

Outro ponto interessante √© que ele trata de alguns temas que podem ser √∫teis em entrevistas para pessoas mais s√™nior como design, paralelismo, etc.

### V√≠deos

Em portugu√™s, o Will e o Gustavo tem feito um trabalho excepcional abordando v√°rias temas no canal deles do Twitch. Recomendo acompanhar as lives deles n√£o s√≥ pelo conte√∫do, mas tamb√©m pela resenha que √© sensacional üòÇ.

<iframe
  src=" https://www.twitch.tv/williandev"
  height="480"
  width="720"
  allowfullscreen="true">
</iframe>

Existem centenas de canais de youtube abordando o assunto. Eu deixo aqui o meu favorito que √© o **Neetcode**. A jornada do cara do Neetcode √© bem interessante e vale a pena voc√™ dar uma olhada. As explica√ß√µes dele, infelizmente, s√£o em ingl√™s, mas se isso n√£o √© uma barreira, eu recomendo.

<iframe width="560" height="315" src=" https://www.youtube.com/c/neetcode" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

### Cursos

Eu vou recomendar 3 cursos aqui. 2 sobre algoritmos no geral e 1 focado em entrevistas:
1. [Curso de algoritmos de Princeton na Coursera](https://www.coursera.org/learn/algorithms-part1). √â puxado, mas tem muita info legal.
2. [Curso de algoritmos do William Fiset no youtube](https://www.youtube.com/watch?v=Qmt0QwzEmh0&list=PLDV1Zeh2NRsB6SWUrDFW2RmDotAfPbeHu&ab_channel=WilliamFiset). Eu acho que hoje em dia t√° gratuito. Ele tem curso cobrindo os principais algoritmos e ele tamb√©m tem um curso focado em grafos.
3. [Curso para entrevistas do pr√≥prio leetcode](https://leetcode.com/explore/interview/card/leetcodes-interview-crash-course-data-structures-and-algorithms/). Esse √© novo e o bom √© que ele √© um guia usando as pr√≥prias quest√µes do leetcode.

Com exce√ß√£o do curso do leetcode, os dois cursos acima podem ser feitos gratuitamente. 

Sobre plataformas pagas (sem citar nome das famosas), eu n√£o sou muito f√£ delas. Isso vai de cada um, eu n√£o acho que o curso vai te dar nada que voc√™ n√£o aprenda nos materias gratuitos. Por√©m, se voc√™ curte a did√°tica da pessoa em quest√£o v√° em frente, o que vale √© estudar e passar na entrevista üòÄü§ë.

## Materiais de estudo para system design

Eu falei muito sobre algoritmos at√© agora, mas outro t√≥pico cobrado em especial pra quem √© pleno e s√™nior √© o tal do System Design. E a√≠? Vai na lista abaixo que √© sucesso:

1. (Gratuito) [Design Primer](https://github.com/donnemartin/system-design-primer): Primeiro vamos de conte√∫do gratuito n√©? A "b√≠blia" pra estudar design de sistemas √© o repo no github "design primer".
Bom mencionar: a) √© todo em texto, b) existe uma vers√£o em portugu√™s mas n√£o sei o quanto j√° foi traduzido.
2. (Pago) Livro System Design Interview do Alex Xu: Excelente intro e o livro 2 vai em alguns aspectos mais complexos. √â uma boa base, mas cuidado em n√£o sair decorando porque √†s vezes o autor se aprofunda mais em uma √°rea que ele se interessa, mas que talvez voc√™ n√£o precise focar durante a entrevista. Eu falarei mais sobre isso em um post mais adiante quando focarmos em System Design.
![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vpyj204pjubhpiw3roht.jpeg)
3. (Pago) Eu curto o curso da educative.io [Grokking the system design interview](https://educative.io/courses/grokking-the-system-design-interview). Por muito tempo, esse era o √∫nico curso que "juntava" todo o conte√∫do dispon√≠vel pela internet.

Existem diversos canais de youtube falando sobre o tema, os dois que eu mais utilizei s√£o o "System Design Fight Club" e o "Code with Irtiza". Mais uma vez, muito cuidado em seguir cegamento o que eles falam, a maioria desses canais √© de pessoas sem muito XP na ind√∫stria, eles s√≥ meio que repetem o que t√° nos livros ou fazem designs SUPER complicados. Como exerc√≠cio √© interessante, mas na entrevista, muitas vezes a pessoa do outro lado s√≥ quer algo simples e que funcione.

## Estrat√©gias de estudo

Algumas estrat√©gias b√°sicas que funcionaram comigo:
1. **Siga um fluxo de estudo** que vai de estrutura de dados mais b√°sicas at√© as mais complexas. 
2. **Mantenha uma planilha ou anota√ß√µes sobre o qu√£o bem voc√™ resolveu qual quest√£o**. D√° uma olhada no meu exemplo abaixo.
  * As quest√µes verdes foram f√°ceis, eu volto nelas ap√≥s semanas. 
  * As quest√µes amarelas eu sei por onde fazer, mas errei algum detalhe/besteira. Eu costumo voltar nelas ap√≥s alguns dias.
  * As quest√µes vermelhas eu n√£o sabia por onde ir. Leio como resolver e volto nela no mesmo dia ou no dia seguinte. O objetivo √© fazer ela ficar amarela
![leetcode grinding](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pu6gnf7j67ocy5ckwatf.png)
3. **N√£o bata muito a cabe√ßa contra as quest√µes**. N√£o conseguiu resolver em 10-15 min? V√° olhar a resposta e entender como fazer. 
4. **N√£o foque em quest√µes hard**. Raramente elas caem em sele√ß√£o (acho que s√≥ Google e Meta pedem elas hoje em dia). IMHO, n√£o vale √† pena, o esfor√ßo √© muito alto e a recompensa √© muito pequena.
5. Tenha **olhar cr√≠tico** ao analisar solu√ß√µes de **system design**. Questione e pense se d√° pra fazer diferente.
6. **D√™ pausas quando tiver muito estressado(a)**. √â uma maratona. Cuidado com o burnoutinho. 
7. Voc√™ pode variar seu dia entre **algoritmos** e **system design** pra deixar mais din√¢mico e evitar fadiga mental.
8. √â bacana colocar uma meta "2-3 quest√µes por dia" e tentar focar nela. O que sair depois disso √© lucro.

## Conclus√£o

Como falei at√© a√≠ em cima, √© uma maratona, v√° com calma que voc√™ chega l√°.

Se voc√™ durou at√© aqui, parab√©ns! Nos vemos em breve na parte 3 sobre algoritmos e estruturas de dados. E se curtiu, segue a√≠, compartilha e espalhe a palavra ü•∞.

![Image description](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqe5ab6tcomxrxjc43c8.gif)

## S√©rie FAANG at√© agora

1. Parte 1 - [Conceitos, curriculo e como aplicar pra uma FAANG](https://dev.to/hugaomarques/faang-guia-descomplicado-de-entrevistas-parte-1-3di0)